---
import Button from "@components/ui/Button.astro";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import ImageFullScreen from "@components/ui/ImageFullScreen";
import { getLangFromUrl, useTranslatedPath, useTranslations } from "@i18n/utils";
import type { Project } from "content/config";
const images = import.meta.glob<{ default: ImageMetadata }>("/src/assets/project/*.{jpeg,jpg,png,gif}");
const projectImages = import.meta.glob<{ default: ImageMetadata }>(
    "/src/assets/project/*/*.{jpeg,jpg,png,gif,webp}"
);

interface Props {
    project: Project;
    nextProjectLink: string;
    previousProjectLink: string;
}

const { project, nextProjectLink, previousProjectLink } = Astro.props;
const { Content } = await project.render();

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatedPath(lang);
---

<div class="mt-3 px-5 flex flex-col gap-10">
    <div class="mx-auto">
        <Image
            src={images[project.data.image.src]()}
            alt={project.data.image.alt}
            format="webp"
            loading="eager"
            decoding="async"
            width="850"
            height="496"
            class="cursor-pointer object-cover object-top w-full h-full border-2 border-zinc-600 dark:border-zinc-800 rounded-lg"
            transition:name={"img-" + project.slug}
        />
    </div>
    <div
        class="prose prose-lg mx-auto max-w-3xl text-base text-zinc-800 dark:prose-invert dark:text-zinc-200 flex flex-col gap-24">
        <article
            class="hover:prose-a:text-blue_dark dark:hover:prose-a:text-blue_light prose-a:no-underline prose-headings:text-zinc-800 prose-strong:text-zinc-800 prose-a:text-zinc-800 dark:prose-headings:text-zinc-200 dark:prose-strong:text-zinc-200 dark:prose-a:text-zinc-200">
            <h1>
                {project.data.name}
            </h1>
            <Content />
            <div class="flex flex-col gap-10">
                {
                    project.data.images.map((image: { src: string; alt: string }) => (
                        <figure class="flex flex-col gap-2 m-0">
                            <div class="border-2 border-zinc-600 dark:border-zinc-800 bg-gray-300">
                                <ImageFullScreen client:load>
                                    <Image
                                        src={projectImages[image.src]()}
                                        alt={image.alt}
                                        format="webp"
                                        loading="lazy"
                                        width="1700"
                                        height="940"
                                        class="block h-full w-full transform object-contain m-0"
                                    />
                                </ImageFullScreen>
                            </div>
                            <figcaption class="text-center text-zinc-800 dark:text-zinc-200 m-0">
                                {image.alt}
                            </figcaption>
                        </figure>
                    ))
                }
            </div>
        </article>
        <div class="flex flex-row gap-10 justify-center">
            <Button
                style="primary"
                href={translatePath(`${previousProjectLink}/`)}
                size="md"
                class="flex items-center justify-between no-underline w-[120px]">
                <Icon class="size-5 flex-shrink-0" name="arrow-left" />
                <span>{t("Précédent")}</span>
            </Button>
            <Button
                style="primary"
                href={translatePath(`${nextProjectLink}/`)}
                size="md"
                class="flex items-center justify-between no-underline w-[120px]">
                <span>{t("Suivant")}</span>
                <Icon class="size-5 flex-shrink-0" name="arrow-right" />
            </Button>
        </div>
    </div>
</div>
